{"ast":null,"code":"import axios from 'axios';\nconst state = {\n  token: localStorage.getItem('token') || '',\n  user: JSON.parse(localStorage.getItem('user')) || null\n};\nconst getters = {\n  isLoggedIn: state => !!state.token,\n  currentUser: state => state.user\n};\nconst actions = {\n  async login({\n    commit\n  }, credentials) {\n    try {\n      const response = await axios.post('/api/auth/login', credentials);\n      const {\n        token,\n        user\n      } = response.data;\n      localStorage.setItem('token', token);\n      localStorage.setItem('user', JSON.stringify(user));\n      commit('SET_TOKEN', token);\n      commit('SET_USER', user);\n      return response;\n    } catch (error) {\n      throw error;\n    }\n  },\n  async logout({\n    commit\n  }) {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    commit('SET_TOKEN', '');\n    commit('SET_USER', null);\n  }\n};\nconst mutations = {\n  SET_TOKEN(state, token) {\n    state.token = token;\n  },\n  SET_USER(state, user) {\n    state.user = user;\n  }\n};\nexport default {\n  namespaced: true,\n  state,\n  getters,\n  actions,\n  mutations\n};","map":{"version":3,"names":["axios","state","token","localStorage","getItem","user","JSON","parse","getters","isLoggedIn","currentUser","actions","login","commit","credentials","response","post","data","setItem","stringify","error","logout","removeItem","mutations","SET_TOKEN","SET_USER","namespaced"],"sources":["/Users/dai/Documents/Memo-App/src/frontend/src/store/modules/auth.js"],"sourcesContent":["import axios from 'axios'\n\nconst state = {\n  token: localStorage.getItem('token') || '',\n  user: JSON.parse(localStorage.getItem('user')) || null\n}\n\nconst getters = {\n  isLoggedIn: state => !!state.token,\n  currentUser: state => state.user\n}\n\nconst actions = {\n  async login({ commit }, credentials) {\n    try {\n      const response = await axios.post('/api/auth/login', credentials)\n      const { token, user } = response.data\n      \n      localStorage.setItem('token', token)\n      localStorage.setItem('user', JSON.stringify(user))\n      \n      commit('SET_TOKEN', token)\n      commit('SET_USER', user)\n      \n      return response\n    } catch (error) {\n      throw error\n    }\n  },\n\n  async logout({ commit }) {\n    localStorage.removeItem('token')\n    localStorage.removeItem('user')\n    commit('SET_TOKEN', '')\n    commit('SET_USER', null)\n  }\n}\n\nconst mutations = {\n  SET_TOKEN(state, token) {\n    state.token = token\n  },\n  SET_USER(state, user) {\n    state.user = user\n  }\n}\n\nexport default {\n  namespaced: true,\n  state,\n  getters,\n  actions,\n  mutations\n} "],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,KAAK,GAAG;EACZC,KAAK,EAAEC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,IAAI,EAAE;EAC1CC,IAAI,EAAEC,IAAI,CAACC,KAAK,CAACJ,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC,IAAI;AACpD,CAAC;AAED,MAAMI,OAAO,GAAG;EACdC,UAAU,EAAER,KAAK,IAAI,CAAC,CAACA,KAAK,CAACC,KAAK;EAClCQ,WAAW,EAAET,KAAK,IAAIA,KAAK,CAACI;AAC9B,CAAC;AAED,MAAMM,OAAO,GAAG;EACd,MAAMC,KAAKA,CAAC;IAAEC;EAAO,CAAC,EAAEC,WAAW,EAAE;IACnC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMf,KAAK,CAACgB,IAAI,CAAC,iBAAiB,EAAEF,WAAW,CAAC;MACjE,MAAM;QAAEZ,KAAK;QAAEG;MAAK,CAAC,GAAGU,QAAQ,CAACE,IAAI;MAErCd,YAAY,CAACe,OAAO,CAAC,OAAO,EAAEhB,KAAK,CAAC;MACpCC,YAAY,CAACe,OAAO,CAAC,MAAM,EAAEZ,IAAI,CAACa,SAAS,CAACd,IAAI,CAAC,CAAC;MAElDQ,MAAM,CAAC,WAAW,EAAEX,KAAK,CAAC;MAC1BW,MAAM,CAAC,UAAU,EAAER,IAAI,CAAC;MAExB,OAAOU,QAAQ;IACjB,CAAC,CAAC,OAAOK,KAAK,EAAE;MACd,MAAMA,KAAK;IACb;EACF,CAAC;EAED,MAAMC,MAAMA,CAAC;IAAER;EAAO,CAAC,EAAE;IACvBV,YAAY,CAACmB,UAAU,CAAC,OAAO,CAAC;IAChCnB,YAAY,CAACmB,UAAU,CAAC,MAAM,CAAC;IAC/BT,MAAM,CAAC,WAAW,EAAE,EAAE,CAAC;IACvBA,MAAM,CAAC,UAAU,EAAE,IAAI,CAAC;EAC1B;AACF,CAAC;AAED,MAAMU,SAAS,GAAG;EAChBC,SAASA,CAACvB,KAAK,EAAEC,KAAK,EAAE;IACtBD,KAAK,CAACC,KAAK,GAAGA,KAAK;EACrB,CAAC;EACDuB,QAAQA,CAACxB,KAAK,EAAEI,IAAI,EAAE;IACpBJ,KAAK,CAACI,IAAI,GAAGA,IAAI;EACnB;AACF,CAAC;AAED,eAAe;EACbqB,UAAU,EAAE,IAAI;EAChBzB,KAAK;EACLO,OAAO;EACPG,OAAO;EACPY;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}