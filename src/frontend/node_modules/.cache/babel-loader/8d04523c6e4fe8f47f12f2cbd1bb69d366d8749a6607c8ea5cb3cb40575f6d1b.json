{"ast":null,"code":"import { toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, mergeProps as _mergeProps, withCtx as _withCtx, createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_v_btn = _resolveComponent(\"v-btn\");\n  const _component_v_snackbar = _resolveComponent(\"v-snackbar\");\n  return _openBlock(), _createBlock(_component_v_snackbar, {\n    modelValue: $setup.show,\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.show = $event),\n    color: $setup.errorType,\n    timeout: $setup.timeout,\n    top: \"\"\n  }, {\n    action: _withCtx(({\n      attrs\n    }) => [_createVNode(_component_v_btn, _mergeProps({\n      text: \"\"\n    }, attrs, {\n      onClick: _cache[0] || (_cache[0] = $event => $setup.show = false)\n    }), {\n      default: _withCtx(() => _cache[2] || (_cache[2] = [_createTextVNode(\" 閉じる \")])),\n      _: 2 /* DYNAMIC */,\n      __: [2]\n    }, 1040 /* FULL_PROPS, DYNAMIC_SLOTS */)]),\n    default: _withCtx(() => [_createTextVNode(_toDisplayString($setup.errorMessage) + \" \", 1 /* TEXT */)]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"modelValue\", \"color\", \"timeout\"]);\n}","map":{"version":3,"names":["_createBlock","_component_v_snackbar","$setup","show","$event","color","errorType","timeout","top","action","_withCtx","attrs","_createVNode","_component_v_btn","_mergeProps","text","onClick","_cache","errorMessage"],"sources":["/Users/dai/Documents/Memo-App/src/frontend/src/components/GlobalErrorHandler.vue"],"sourcesContent":["<template>\n  <v-snackbar\n    v-model=\"show\"\n    :color=\"errorType\"\n    :timeout=\"timeout\"\n    top\n  >\n    {{ errorMessage }}\n    <template v-slot:action=\"{ attrs }\">\n      <v-btn\n        text\n        v-bind=\"attrs\"\n        @click=\"show = false\"\n      >\n        閉じる\n      </v-btn>\n    </template>\n  </v-snackbar>\n</template>\n\n<script>\nimport { ref, computed } from 'vue'\nimport { useStore } from 'vuex'\n\nexport default {\n  name: 'GlobalErrorHandler',\n  setup() {\n    const store = useStore()\n    const show = ref(false)\n    const timeout = 5000\n\n    const error = computed(() => store.state.error)\n    const errorMessage = computed(() => {\n      if (!error.value) return ''\n      \n      if (error.value.response) {\n        const status = error.value.response.status\n        const message = error.value.response.data.message\n\n        switch (status) {\n          case 400:\n            return '入力内容に誤りがあります'\n          case 401:\n            return '認証に失敗しました。再度ログインしてください'\n          case 403:\n            return 'この操作を実行する権限がありません'\n          case 404:\n            return 'リソースが見つかりません'\n          case 500:\n            return 'サーバーエラーが発生しました'\n          default:\n            return message || 'エラーが発生しました'\n        }\n      }\n\n      return 'エラーが発生しました'\n    })\n\n    const errorType = computed(() => {\n      if (!error.value) return 'error'\n      \n      if (error.value.response) {\n        const status = error.value.response.status\n\n        switch (status) {\n          case 401:\n          case 403:\n            return 'warning'\n          default:\n            return 'error'\n        }\n      }\n\n      return 'error'\n    })\n\n    // エラーが発生したらスナックバーを表示\n    const showError = () => {\n      if (error.value) {\n        show.value = true\n      }\n    }\n\n    // エラーの監視\n    watch(error, showError)\n\n    return {\n      show,\n      timeout,\n      errorMessage,\n      errorType\n    }\n  }\n}\n</script> "],"mappings":";;;;uBACEA,YAAA,CAgBaC,qBAAA;gBAfFC,MAAA,CAAAC,IAAI;+DAAJD,MAAA,CAAAC,IAAI,GAAAC,MAAA;IACZC,KAAK,EAAEH,MAAA,CAAAI,SAAS;IAChBC,OAAO,EAAEL,MAAA,CAAAK,OAAO;IACjBC,GAAG,EAAH;;IAGiBC,MAAM,EAAAC,QAAA,CACrB,CAMQ;MAPiBC;IAAK,OAC9BC,YAAA,CAMQC,gBAAA,EANRC,WAAA,CAMQ;MALNC,IAAI,EAAJ;IAAI,GACIJ,KAAK;MACZK,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAb,MAAA,IAAEF,MAAA,CAAAC,IAAI;;wBACb,MAEDc,MAAA,QAAAA,MAAA,O,iBAFC,OAED,E;;;;sBARF,MAAkB,C,kCAAff,MAAA,CAAAgB,YAAY,IAAG,GAClB,gB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}