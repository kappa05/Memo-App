{"ast":null,"code":"import \"core-js/modules/es.array.some.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.some.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport { createRouter, createWebHistory } from 'vue-router';\nimport store from '../store';\nvar routes = [{\n  path: '/',\n  redirect: '/memos'\n}, {\n  path: '/login',\n  name: 'Login',\n  component: function component() {\n    return import('../views/Login.vue');\n  },\n  meta: {\n    requiresAuth: false\n  }\n}, {\n  path: '/memos',\n  name: 'MemoList',\n  component: function component() {\n    return import('../views/MemoList.vue');\n  },\n  meta: {\n    requiresAuth: true\n  }\n}, {\n  path: '/memos/new',\n  name: 'MemoCreate',\n  component: function component() {\n    return import('../views/MemoEdit.vue');\n  },\n  meta: {\n    requiresAuth: true\n  }\n}, {\n  path: '/memos/:id',\n  name: 'MemoDetail',\n  component: function component() {\n    return import('../views/MemoDetail.vue');\n  },\n  meta: {\n    requiresAuth: true\n  }\n}, {\n  path: '/memos/:id/edit',\n  name: 'MemoEdit',\n  component: function component() {\n    return import('../views/MemoEdit.vue');\n  },\n  meta: {\n    requiresAuth: true\n  }\n}, {\n  path: '/categories',\n  name: 'CategoryList',\n  component: function component() {\n    return import('../views/CategoryList.vue');\n  },\n  meta: {\n    requiresAuth: true\n  }\n}];\nvar router = createRouter({\n  history: createWebHistory(process.env.BASE_URL),\n  routes: routes\n});\nrouter.beforeEach(function (to, from, next) {\n  var requiresAuth = to.matched.some(function (record) {\n    return record.meta.requiresAuth;\n  });\n  var isLoggedIn = store.getters['auth/isLoggedIn'];\n  if (requiresAuth && !isLoggedIn) {\n    next('/login');\n  } else if (to.path === '/login' && isLoggedIn) {\n    next('/memos');\n  } else {\n    next();\n  }\n});\nexport default router;","map":{"version":3,"names":["createRouter","createWebHistory","store","routes","path","redirect","name","component","meta","requiresAuth","router","history","process","env","BASE_URL","beforeEach","to","from","next","matched","some","record","isLoggedIn","getters"],"sources":["/Users/dai/Documents/Memo-App/src/frontend/src/router/index.js"],"sourcesContent":["import { createRouter, createWebHistory } from 'vue-router'\nimport store from '../store'\n\nconst routes = [\n  {\n    path: '/',\n    redirect: '/memos'\n  },\n  {\n    path: '/login',\n    name: 'Login',\n    component: () => import('../views/Login.vue'),\n    meta: { requiresAuth: false }\n  },\n  {\n    path: '/memos',\n    name: 'MemoList',\n    component: () => import('../views/MemoList.vue'),\n    meta: { requiresAuth: true }\n  },\n  {\n    path: '/memos/new',\n    name: 'MemoCreate',\n    component: () => import('../views/MemoEdit.vue'),\n    meta: { requiresAuth: true }\n  },\n  {\n    path: '/memos/:id',\n    name: 'MemoDetail',\n    component: () => import('../views/MemoDetail.vue'),\n    meta: { requiresAuth: true }\n  },\n  {\n    path: '/memos/:id/edit',\n    name: 'MemoEdit',\n    component: () => import('../views/MemoEdit.vue'),\n    meta: { requiresAuth: true }\n  },\n  {\n    path: '/categories',\n    name: 'CategoryList',\n    component: () => import('../views/CategoryList.vue'),\n    meta: { requiresAuth: true }\n  }\n]\n\nconst router = createRouter({\n  history: createWebHistory(process.env.BASE_URL),\n  routes\n})\n\nrouter.beforeEach((to, from, next) => {\n  const requiresAuth = to.matched.some(record => record.meta.requiresAuth)\n  const isLoggedIn = store.getters['auth/isLoggedIn']\n\n  if (requiresAuth && !isLoggedIn) {\n    next('/login')\n  } else if (to.path === '/login' && isLoggedIn) {\n    next('/memos')\n  } else {\n    next()\n  }\n})\n\nexport default router "],"mappings":";;;;;;AAAA,SAASA,YAAY,EAAEC,gBAAgB,QAAQ,YAAY;AAC3D,OAAOC,KAAK,MAAM,UAAU;AAE5B,IAAMC,MAAM,GAAG,CACb;EACEC,IAAI,EAAE,GAAG;EACTC,QAAQ,EAAE;AACZ,CAAC,EACD;EACED,IAAI,EAAE,QAAQ;EACdE,IAAI,EAAE,OAAO;EACbC,SAAS,EAAE,SAAXA,SAASA,CAAA;IAAA,OAAQ,MAAM,CAAC,oBAAoB,CAAC;EAAA;EAC7CC,IAAI,EAAE;IAAEC,YAAY,EAAE;EAAM;AAC9B,CAAC,EACD;EACEL,IAAI,EAAE,QAAQ;EACdE,IAAI,EAAE,UAAU;EAChBC,SAAS,EAAE,SAAXA,SAASA,CAAA;IAAA,OAAQ,MAAM,CAAC,uBAAuB,CAAC;EAAA;EAChDC,IAAI,EAAE;IAAEC,YAAY,EAAE;EAAK;AAC7B,CAAC,EACD;EACEL,IAAI,EAAE,YAAY;EAClBE,IAAI,EAAE,YAAY;EAClBC,SAAS,EAAE,SAAXA,SAASA,CAAA;IAAA,OAAQ,MAAM,CAAC,uBAAuB,CAAC;EAAA;EAChDC,IAAI,EAAE;IAAEC,YAAY,EAAE;EAAK;AAC7B,CAAC,EACD;EACEL,IAAI,EAAE,YAAY;EAClBE,IAAI,EAAE,YAAY;EAClBC,SAAS,EAAE,SAAXA,SAASA,CAAA;IAAA,OAAQ,MAAM,CAAC,yBAAyB,CAAC;EAAA;EAClDC,IAAI,EAAE;IAAEC,YAAY,EAAE;EAAK;AAC7B,CAAC,EACD;EACEL,IAAI,EAAE,iBAAiB;EACvBE,IAAI,EAAE,UAAU;EAChBC,SAAS,EAAE,SAAXA,SAASA,CAAA;IAAA,OAAQ,MAAM,CAAC,uBAAuB,CAAC;EAAA;EAChDC,IAAI,EAAE;IAAEC,YAAY,EAAE;EAAK;AAC7B,CAAC,EACD;EACEL,IAAI,EAAE,aAAa;EACnBE,IAAI,EAAE,cAAc;EACpBC,SAAS,EAAE,SAAXA,SAASA,CAAA;IAAA,OAAQ,MAAM,CAAC,2BAA2B,CAAC;EAAA;EACpDC,IAAI,EAAE;IAAEC,YAAY,EAAE;EAAK;AAC7B,CAAC,CACF;AAED,IAAMC,MAAM,GAAGV,YAAY,CAAC;EAC1BW,OAAO,EAAEV,gBAAgB,CAACW,OAAO,CAACC,GAAG,CAACC,QAAQ,CAAC;EAC/CX,MAAM,EAANA;AACF,CAAC,CAAC;AAEFO,MAAM,CAACK,UAAU,CAAC,UAACC,EAAE,EAAEC,IAAI,EAAEC,IAAI,EAAK;EACpC,IAAMT,YAAY,GAAGO,EAAE,CAACG,OAAO,CAACC,IAAI,CAAC,UAAAC,MAAM;IAAA,OAAIA,MAAM,CAACb,IAAI,CAACC,YAAY;EAAA,EAAC;EACxE,IAAMa,UAAU,GAAGpB,KAAK,CAACqB,OAAO,CAAC,iBAAiB,CAAC;EAEnD,IAAId,YAAY,IAAI,CAACa,UAAU,EAAE;IAC/BJ,IAAI,CAAC,QAAQ,CAAC;EAChB,CAAC,MAAM,IAAIF,EAAE,CAACZ,IAAI,KAAK,QAAQ,IAAIkB,UAAU,EAAE;IAC7CJ,IAAI,CAAC,QAAQ,CAAC;EAChB,CAAC,MAAM;IACLA,IAAI,CAAC,CAAC;EACR;AACF,CAAC,CAAC;AAEF,eAAeR,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}