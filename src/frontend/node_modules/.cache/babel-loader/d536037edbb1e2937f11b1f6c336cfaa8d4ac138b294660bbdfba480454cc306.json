{"ast":null,"code":"import _regenerator from \"/Users/dai/Documents/Memo-App/src/frontend/node_modules/@babel/runtime/helpers/esm/regenerator.js\";\nimport _asyncToGenerator from \"/Users/dai/Documents/Memo-App/src/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport axios from 'axios';\nvar state = {\n  token: localStorage.getItem('token') || '',\n  user: JSON.parse(localStorage.getItem('user')) || null\n};\nvar getters = {\n  isLoggedIn: function isLoggedIn(state) {\n    return !!state.token;\n  },\n  currentUser: function currentUser(state) {\n    return state.user;\n  },\n  token: function token(state) {\n    return state.token;\n  }\n};\nvar actions = {\n  login: function login(_ref, credentials) {\n    return _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee() {\n      var commit, response, _response$data, token, user;\n      return _regenerator().w(function (_context) {\n        while (1) switch (_context.n) {\n          case 0:\n            commit = _ref.commit;\n            _context.n = 1;\n            return axios.post('/api/auth/login', credentials);\n          case 1:\n            response = _context.v;\n            _response$data = response.data, token = _response$data.token, user = _response$data.user;\n            commit('SET_TOKEN', token);\n            commit('SET_USER', user);\n            return _context.a(2, user);\n        }\n      }, _callee);\n    }))();\n  },\n  logout: function logout(_ref2) {\n    return _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee2() {\n      var commit;\n      return _regenerator().w(function (_context2) {\n        while (1) switch (_context2.n) {\n          case 0:\n            commit = _ref2.commit;\n            localStorage.removeItem('token');\n            localStorage.removeItem('user');\n            commit('SET_TOKEN', '');\n            commit('SET_USER', null);\n          case 1:\n            return _context2.a(2);\n        }\n      }, _callee2);\n    }))();\n  }\n};\nvar mutations = {\n  SET_TOKEN: function SET_TOKEN(state, token) {\n    state.token = token;\n  },\n  SET_USER: function SET_USER(state, user) {\n    state.user = user;\n  }\n};\nexport default {\n  namespaced: true,\n  state: state,\n  getters: getters,\n  actions: actions,\n  mutations: mutations\n};","map":{"version":3,"names":["axios","state","token","localStorage","getItem","user","JSON","parse","getters","isLoggedIn","currentUser","actions","login","_ref","credentials","_asyncToGenerator","_regenerator","m","_callee","commit","response","_response$data","w","_context","n","post","v","data","a","logout","_ref2","_callee2","_context2","removeItem","mutations","SET_TOKEN","SET_USER","namespaced"],"sources":["/Users/dai/Documents/Memo-App/src/frontend/src/store/modules/auth.js"],"sourcesContent":["import axios from 'axios'\n\nconst state = {\n  token: localStorage.getItem('token') || '',\n  user: JSON.parse(localStorage.getItem('user')) || null\n}\n\nconst getters = {\n  isLoggedIn: state => !!state.token,\n  currentUser: state => state.user,\n  token: state => state.token\n}\n\nconst actions = {\n  async login({ commit }, credentials) {\n    const response = await axios.post('/api/auth/login', credentials)\n    const { token, user } = response.data\n    commit('SET_TOKEN', token)\n    commit('SET_USER', user)\n    return user\n  },\n\n  async logout({ commit }) {\n    localStorage.removeItem('token')\n    localStorage.removeItem('user')\n    commit('SET_TOKEN', '')\n    commit('SET_USER', null)\n  }\n}\n\nconst mutations = {\n  SET_TOKEN(state, token) {\n    state.token = token\n  },\n  SET_USER(state, user) {\n    state.user = user\n  }\n}\n\nexport default {\n  namespaced: true,\n  state,\n  getters,\n  actions,\n  mutations\n} "],"mappings":";;;AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,IAAMC,KAAK,GAAG;EACZC,KAAK,EAAEC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,IAAI,EAAE;EAC1CC,IAAI,EAAEC,IAAI,CAACC,KAAK,CAACJ,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC,IAAI;AACpD,CAAC;AAED,IAAMI,OAAO,GAAG;EACdC,UAAU,EAAE,SAAZA,UAAUA,CAAER,KAAK;IAAA,OAAI,CAAC,CAACA,KAAK,CAACC,KAAK;EAAA;EAClCQ,WAAW,EAAE,SAAbA,WAAWA,CAAET,KAAK;IAAA,OAAIA,KAAK,CAACI,IAAI;EAAA;EAChCH,KAAK,EAAE,SAAPA,KAAKA,CAAED,KAAK;IAAA,OAAIA,KAAK,CAACC,KAAK;EAAA;AAC7B,CAAC;AAED,IAAMS,OAAO,GAAG;EACRC,KAAK,WAALA,KAAKA,CAAAC,IAAA,EAAaC,WAAW,EAAE;IAAA,OAAAC,iBAAA,cAAAC,YAAA,GAAAC,CAAA,UAAAC,QAAA;MAAA,IAAAC,MAAA,EAAAC,QAAA,EAAAC,cAAA,EAAAnB,KAAA,EAAAG,IAAA;MAAA,OAAAW,YAAA,GAAAM,CAAA,WAAAC,QAAA;QAAA,kBAAAA,QAAA,CAAAC,CAAA;UAAA;YAAvBL,MAAM,GAAAN,IAAA,CAANM,MAAM;YAAAI,QAAA,CAAAC,CAAA;YAAA,OACKxB,KAAK,CAACyB,IAAI,CAAC,iBAAiB,EAAEX,WAAW,CAAC;UAAA;YAA3DM,QAAQ,GAAAG,QAAA,CAAAG,CAAA;YAAAL,cAAA,GACUD,QAAQ,CAACO,IAAI,EAA7BzB,KAAK,GAAAmB,cAAA,CAALnB,KAAK,EAAEG,IAAI,GAAAgB,cAAA,CAAJhB,IAAI;YACnBc,MAAM,CAAC,WAAW,EAAEjB,KAAK,CAAC;YAC1BiB,MAAM,CAAC,UAAU,EAAEd,IAAI,CAAC;YAAA,OAAAkB,QAAA,CAAAK,CAAA,IACjBvB,IAAI;QAAA;MAAA,GAAAa,OAAA;IAAA;EACb,CAAC;EAEKW,MAAM,WAANA,MAAMA,CAAAC,KAAA,EAAa;IAAA,OAAAf,iBAAA,cAAAC,YAAA,GAAAC,CAAA,UAAAc,SAAA;MAAA,IAAAZ,MAAA;MAAA,OAAAH,YAAA,GAAAM,CAAA,WAAAU,SAAA;QAAA,kBAAAA,SAAA,CAAAR,CAAA;UAAA;YAAVL,MAAM,GAAAW,KAAA,CAANX,MAAM;YACnBhB,YAAY,CAAC8B,UAAU,CAAC,OAAO,CAAC;YAChC9B,YAAY,CAAC8B,UAAU,CAAC,MAAM,CAAC;YAC/Bd,MAAM,CAAC,WAAW,EAAE,EAAE,CAAC;YACvBA,MAAM,CAAC,UAAU,EAAE,IAAI,CAAC;UAAA;YAAA,OAAAa,SAAA,CAAAJ,CAAA;QAAA;MAAA,GAAAG,QAAA;IAAA;EAC1B;AACF,CAAC;AAED,IAAMG,SAAS,GAAG;EAChBC,SAAS,WAATA,SAASA,CAAClC,KAAK,EAAEC,KAAK,EAAE;IACtBD,KAAK,CAACC,KAAK,GAAGA,KAAK;EACrB,CAAC;EACDkC,QAAQ,WAARA,QAAQA,CAACnC,KAAK,EAAEI,IAAI,EAAE;IACpBJ,KAAK,CAACI,IAAI,GAAGA,IAAI;EACnB;AACF,CAAC;AAED,eAAe;EACbgC,UAAU,EAAE,IAAI;EAChBpC,KAAK,EAALA,KAAK;EACLO,OAAO,EAAPA,OAAO;EACPG,OAAO,EAAPA,OAAO;EACPuB,SAAS,EAATA;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}