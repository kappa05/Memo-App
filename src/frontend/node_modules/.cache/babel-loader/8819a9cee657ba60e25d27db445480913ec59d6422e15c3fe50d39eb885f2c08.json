{"ast":null,"code":"import _objectSpread from \"/Users/dai/Documents/Memo-App/src/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _regenerator from \"/Users/dai/Documents/Memo-App/src/frontend/node_modules/@babel/runtime/helpers/esm/regenerator.js\";\nimport _asyncToGenerator from \"/Users/dai/Documents/Memo-App/src/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.find-index.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.splice.js\";\nimport \"core-js/modules/es.date.now.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport axios from 'axios';\nvar state = {\n  categories: [],\n  loading: false,\n  error: null\n};\nvar getters = {\n  allCategories: function allCategories(state) {\n    return state.categories;\n  },\n  isLoading: function isLoading(state) {\n    return state.loading;\n  }\n};\nvar actions = {\n  fetchCategories: function fetchCategories(_ref) {\n    return _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee() {\n      var commit, mockCategories;\n      return _regenerator().w(function (_context) {\n        while (1) switch (_context.n) {\n          case 0:\n            commit = _ref.commit;\n            // モックデータ\n            mockCategories = [{\n              id: 1,\n              name: '仕事',\n              color: 'blue'\n            }, {\n              id: 2,\n              name: 'プライベート',\n              color: 'green'\n            }, {\n              id: 3,\n              name: '買い物',\n              color: 'orange'\n            }];\n            commit('SET_CATEGORIES', mockCategories);\n            return _context.a(2, mockCategories);\n        }\n      }, _callee);\n    }))();\n  },\n  createCategory: function createCategory(_ref2, category) {\n    return _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee2() {\n      var commit, newCategory;\n      return _regenerator().w(function (_context2) {\n        while (1) switch (_context2.n) {\n          case 0:\n            commit = _ref2.commit;\n            // モックデータ\n            newCategory = _objectSpread({\n              id: Date.now()\n            }, category);\n            commit('ADD_CATEGORY', newCategory);\n            return _context2.a(2, newCategory);\n        }\n      }, _callee2);\n    }))();\n  },\n  updateCategory: function updateCategory(_ref3, category) {\n    return _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee3() {\n      var commit;\n      return _regenerator().w(function (_context3) {\n        while (1) switch (_context3.n) {\n          case 0:\n            commit = _ref3.commit;\n            // モックデータ\n            commit('UPDATE_CATEGORY', category);\n            return _context3.a(2, category);\n        }\n      }, _callee3);\n    }))();\n  },\n  deleteCategory: function deleteCategory(_ref4, id) {\n    return _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee4() {\n      var commit;\n      return _regenerator().w(function (_context4) {\n        while (1) switch (_context4.n) {\n          case 0:\n            commit = _ref4.commit;\n            // モックデータ\n            commit('DELETE_CATEGORY', id);\n            return _context4.a(2, id);\n        }\n      }, _callee4);\n    }))();\n  }\n};\nvar mutations = {\n  SET_CATEGORIES: function SET_CATEGORIES(state, categories) {\n    state.categories = categories;\n  },\n  ADD_CATEGORY: function ADD_CATEGORY(state, category) {\n    state.categories.push(category);\n  },\n  UPDATE_CATEGORY: function UPDATE_CATEGORY(state, updatedCategory) {\n    var index = state.categories.findIndex(function (c) {\n      return c.id === updatedCategory.id;\n    });\n    if (index !== -1) {\n      state.categories.splice(index, 1, updatedCategory);\n    }\n  },\n  DELETE_CATEGORY: function DELETE_CATEGORY(state, id) {\n    state.categories = state.categories.filter(function (c) {\n      return c.id !== id;\n    });\n  }\n};\nexport default {\n  namespaced: true,\n  state: state,\n  getters: getters,\n  actions: actions,\n  mutations: mutations\n};","map":{"version":3,"names":["axios","state","categories","loading","error","getters","allCategories","isLoading","actions","fetchCategories","_ref","_asyncToGenerator","_regenerator","m","_callee","commit","mockCategories","w","_context","n","id","name","color","a","createCategory","_ref2","category","_callee2","newCategory","_context2","_objectSpread","Date","now","updateCategory","_ref3","_callee3","_context3","deleteCategory","_ref4","_callee4","_context4","mutations","SET_CATEGORIES","ADD_CATEGORY","push","UPDATE_CATEGORY","updatedCategory","index","findIndex","c","splice","DELETE_CATEGORY","filter","namespaced"],"sources":["/Users/dai/Documents/Memo-App/src/frontend/src/store/modules/category.js"],"sourcesContent":["import axios from 'axios'\n\nconst state = {\n  categories: [],\n  loading: false,\n  error: null\n}\n\nconst getters = {\n  allCategories: state => state.categories,\n  isLoading: state => state.loading\n}\n\nconst actions = {\n  async fetchCategories({ commit }) {\n    // モックデータ\n    const mockCategories = [\n      {\n        id: 1,\n        name: '仕事',\n        color: 'blue'\n      },\n      {\n        id: 2,\n        name: 'プライベート',\n        color: 'green'\n      },\n      {\n        id: 3,\n        name: '買い物',\n        color: 'orange'\n      }\n    ]\n    commit('SET_CATEGORIES', mockCategories)\n    return mockCategories\n  },\n\n  async createCategory({ commit }, category) {\n    // モックデータ\n    const newCategory = {\n      id: Date.now(),\n      ...category\n    }\n    commit('ADD_CATEGORY', newCategory)\n    return newCategory\n  },\n\n  async updateCategory({ commit }, category) {\n    // モックデータ\n    commit('UPDATE_CATEGORY', category)\n    return category\n  },\n\n  async deleteCategory({ commit }, id) {\n    // モックデータ\n    commit('DELETE_CATEGORY', id)\n    return id\n  }\n}\n\nconst mutations = {\n  SET_CATEGORIES(state, categories) {\n    state.categories = categories\n  },\n  ADD_CATEGORY(state, category) {\n    state.categories.push(category)\n  },\n  UPDATE_CATEGORY(state, updatedCategory) {\n    const index = state.categories.findIndex(c => c.id === updatedCategory.id)\n    if (index !== -1) {\n      state.categories.splice(index, 1, updatedCategory)\n    }\n  },\n  DELETE_CATEGORY(state, id) {\n    state.categories = state.categories.filter(c => c.id !== id)\n  }\n}\n\nexport default {\n  namespaced: true,\n  state,\n  getters,\n  actions,\n  mutations\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}