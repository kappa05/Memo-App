{"ast":null,"code":"import { ref, computed, onMounted } from 'vue';\nimport { useStore } from 'vuex';\nimport { useRoute, useRouter } from 'vue-router';\nexport default {\n  name: 'MemoDetail',\n  setup() {\n    const store = useStore();\n    const route = useRoute();\n    const router = useRouter();\n    const dialog = ref(false);\n    const editedItem = ref({\n      title: '',\n      content: '',\n      category: ''\n    });\n    const memo = computed(() => store.getters['memo/currentMemo']);\n    const categories = computed(() => store.getters['category/allCategories']);\n    const getCategoryColor = category => {\n      const categoryObj = categories.value.find(c => c.name === category);\n      return categoryObj ? categoryObj.color : 'grey';\n    };\n    const formatDate = date => {\n      return new Date(date).toLocaleString('ja-JP');\n    };\n    const editMemo = () => {\n      editedItem.value = Object.assign({}, memo.value);\n      dialog.value = true;\n    };\n    const deleteMemo = async () => {\n      if (confirm('このメモを削除してもよろしいですか？')) {\n        try {\n          await store.dispatch('memo/deleteMemo', memo.value.id);\n          router.push('/memos');\n        } catch (error) {\n          // エラー処理はグローバルエラーハンドラーで行う\n        }\n      }\n    };\n    const close = () => {\n      dialog.value = false;\n      editedItem.value = Object.assign({}, memo.value);\n    };\n    const save = async () => {\n      try {\n        await store.dispatch('memo/updateMemo', {\n          id: memo.value.id,\n          ...editedItem.value\n        });\n        close();\n      } catch (error) {\n        // エラー処理はグローバルエラーハンドラーで行う\n      }\n    };\n    onMounted(async () => {\n      try {\n        await Promise.all([store.dispatch('memo/fetchMemo', route.params.id), store.dispatch('category/fetchCategories')]);\n      } catch (error) {\n        // エラー処理はグローバルエラーハンドラーで行う\n      }\n    });\n    return {\n      memo,\n      categories,\n      dialog,\n      editedItem,\n      getCategoryColor,\n      formatDate,\n      editMemo,\n      deleteMemo,\n      close,\n      save\n    };\n  }\n};","map":{"version":3,"names":["ref","computed","onMounted","useStore","useRoute","useRouter","name","setup","store","route","router","dialog","editedItem","title","content","category","memo","getters","categories","getCategoryColor","categoryObj","value","find","c","color","formatDate","date","Date","toLocaleString","editMemo","Object","assign","deleteMemo","confirm","dispatch","id","push","error","close","save","Promise","all","params"],"sources":["/Users/dai/Documents/Memo-App/src/frontend/src/views/MemoDetail.vue"],"sourcesContent":["<template>\n  <v-container>\n    <v-row>\n      <v-col cols=\"12\">\n        <v-card>\n          <v-card-title class=\"text-h5\">\n            {{ memo.title }}\n            <v-spacer></v-spacer>\n            <v-chip\n              :color=\"getCategoryColor(memo.category)\"\n              text-color=\"white\"\n              class=\"mr-2\"\n            >\n              {{ memo.category }}\n            </v-chip>\n            <v-btn\n              icon\n              @click=\"editMemo\"\n            >\n              <v-icon>mdi-pencil</v-icon>\n            </v-btn>\n            <v-btn\n              icon\n              @click=\"deleteMemo\"\n            >\n              <v-icon>mdi-delete</v-icon>\n            </v-btn>\n          </v-card-title>\n\n          <v-card-text>\n            <div class=\"text-subtitle-2 mb-2\">\n              作成日: {{ formatDate(memo.createdAt) }}\n            </div>\n            <div class=\"text-subtitle-2 mb-4\">\n              更新日: {{ formatDate(memo.updatedAt) }}\n            </div>\n            <div class=\"text-body-1 white-space-pre-wrap\">\n              {{ memo.content }}\n            </div>\n          </v-card-text>\n\n          <v-card-actions>\n            <v-spacer></v-spacer>\n            <v-btn\n              color=\"primary\"\n              text\n              @click=\"$router.push('/memos')\"\n            >\n              一覧に戻る\n            </v-btn>\n          </v-card-actions>\n        </v-card>\n      </v-col>\n    </v-row>\n\n    <v-dialog v-model=\"dialog\" max-width=\"500px\">\n      <v-card>\n        <v-card-title>\n          <span class=\"text-h5\">メモ編集</span>\n        </v-card-title>\n\n        <v-card-text>\n          <v-container>\n            <v-row>\n              <v-col cols=\"12\">\n                <v-text-field\n                  v-model=\"editedItem.title\"\n                  label=\"タイトル\"\n                ></v-text-field>\n              </v-col>\n              <v-col cols=\"12\">\n                <v-textarea\n                  v-model=\"editedItem.content\"\n                  label=\"内容\"\n                ></v-textarea>\n              </v-col>\n              <v-col cols=\"12\">\n                <v-select\n                  v-model=\"editedItem.category\"\n                  :items=\"categories\"\n                  label=\"カテゴリー\"\n                ></v-select>\n              </v-col>\n            </v-row>\n          </v-container>\n        </v-card-text>\n\n        <v-card-actions>\n          <v-spacer></v-spacer>\n          <v-btn color=\"blue darken-1\" text @click=\"close\">キャンセル</v-btn>\n          <v-btn color=\"blue darken-1\" text @click=\"save\">保存</v-btn>\n        </v-card-actions>\n      </v-card>\n    </v-dialog>\n  </v-container>\n</template>\n\n<script>\nimport { ref, computed, onMounted } from 'vue'\nimport { useStore } from 'vuex'\nimport { useRoute, useRouter } from 'vue-router'\n\nexport default {\n  name: 'MemoDetail',\n  setup() {\n    const store = useStore()\n    const route = useRoute()\n    const router = useRouter()\n\n    const dialog = ref(false)\n    const editedItem = ref({\n      title: '',\n      content: '',\n      category: ''\n    })\n\n    const memo = computed(() => store.getters['memo/currentMemo'])\n    const categories = computed(() => store.getters['category/allCategories'])\n\n    const getCategoryColor = (category) => {\n      const categoryObj = categories.value.find(c => c.name === category)\n      return categoryObj ? categoryObj.color : 'grey'\n    }\n\n    const formatDate = (date) => {\n      return new Date(date).toLocaleString('ja-JP')\n    }\n\n    const editMemo = () => {\n      editedItem.value = Object.assign({}, memo.value)\n      dialog.value = true\n    }\n\n    const deleteMemo = async () => {\n      if (confirm('このメモを削除してもよろしいですか？')) {\n        try {\n          await store.dispatch('memo/deleteMemo', memo.value.id)\n          router.push('/memos')\n        } catch (error) {\n          // エラー処理はグローバルエラーハンドラーで行う\n        }\n      }\n    }\n\n    const close = () => {\n      dialog.value = false\n      editedItem.value = Object.assign({}, memo.value)\n    }\n\n    const save = async () => {\n      try {\n        await store.dispatch('memo/updateMemo', {\n          id: memo.value.id,\n          ...editedItem.value\n        })\n        close()\n      } catch (error) {\n        // エラー処理はグローバルエラーハンドラーで行う\n      }\n    }\n\n    onMounted(async () => {\n      try {\n        await Promise.all([\n          store.dispatch('memo/fetchMemo', route.params.id),\n          store.dispatch('category/fetchCategories')\n        ])\n      } catch (error) {\n        // エラー処理はグローバルエラーハンドラーで行う\n      }\n    })\n\n    return {\n      memo,\n      categories,\n      dialog,\n      editedItem,\n      getCategoryColor,\n      formatDate,\n      editMemo,\n      deleteMemo,\n      close,\n      save\n    }\n  }\n}\n</script>\n\n<style scoped>\n.white-space-pre-wrap {\n  white-space: pre-wrap;\n}\n</style> "],"mappings":"AAkGA,SAASA,GAAG,EAAEC,QAAQ,EAAEC,SAAQ,QAAS,KAAI;AAC7C,SAASC,QAAO,QAAS,MAAK;AAC9B,SAASC,QAAQ,EAAEC,SAAQ,QAAS,YAAW;AAE/C,eAAe;EACbC,IAAI,EAAE,YAAY;EAClBC,KAAKA,CAAA,EAAG;IACN,MAAMC,KAAI,GAAIL,QAAQ,CAAC;IACvB,MAAMM,KAAI,GAAIL,QAAQ,CAAC;IACvB,MAAMM,MAAK,GAAIL,SAAS,CAAC;IAEzB,MAAMM,MAAK,GAAIX,GAAG,CAAC,KAAK;IACxB,MAAMY,UAAS,GAAIZ,GAAG,CAAC;MACrBa,KAAK,EAAE,EAAE;MACTC,OAAO,EAAE,EAAE;MACXC,QAAQ,EAAE;IACZ,CAAC;IAED,MAAMC,IAAG,GAAIf,QAAQ,CAAC,MAAMO,KAAK,CAACS,OAAO,CAAC,kBAAkB,CAAC;IAC7D,MAAMC,UAAS,GAAIjB,QAAQ,CAAC,MAAMO,KAAK,CAACS,OAAO,CAAC,wBAAwB,CAAC;IAEzE,MAAME,gBAAe,GAAKJ,QAAQ,IAAK;MACrC,MAAMK,WAAU,GAAIF,UAAU,CAACG,KAAK,CAACC,IAAI,CAACC,CAAA,IAAKA,CAAC,CAACjB,IAAG,KAAMS,QAAQ;MAClE,OAAOK,WAAU,GAAIA,WAAW,CAACI,KAAI,GAAI,MAAK;IAChD;IAEA,MAAMC,UAAS,GAAKC,IAAI,IAAK;MAC3B,OAAO,IAAIC,IAAI,CAACD,IAAI,CAAC,CAACE,cAAc,CAAC,OAAO;IAC9C;IAEA,MAAMC,QAAO,GAAIA,CAAA,KAAM;MACrBjB,UAAU,CAACS,KAAI,GAAIS,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAEf,IAAI,CAACK,KAAK;MAC/CV,MAAM,CAACU,KAAI,GAAI,IAAG;IACpB;IAEA,MAAMW,UAAS,GAAI,MAAAA,CAAA,KAAY;MAC7B,IAAIC,OAAO,CAAC,oBAAoB,CAAC,EAAE;QACjC,IAAI;UACF,MAAMzB,KAAK,CAAC0B,QAAQ,CAAC,iBAAiB,EAAElB,IAAI,CAACK,KAAK,CAACc,EAAE;UACrDzB,MAAM,CAAC0B,IAAI,CAAC,QAAQ;QACtB,EAAE,OAAOC,KAAK,EAAE;UACd;QAAA;MAEJ;IACF;IAEA,MAAMC,KAAI,GAAIA,CAAA,KAAM;MAClB3B,MAAM,CAACU,KAAI,GAAI,KAAI;MACnBT,UAAU,CAACS,KAAI,GAAIS,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAEf,IAAI,CAACK,KAAK;IACjD;IAEA,MAAMkB,IAAG,GAAI,MAAAA,CAAA,KAAY;MACvB,IAAI;QACF,MAAM/B,KAAK,CAAC0B,QAAQ,CAAC,iBAAiB,EAAE;UACtCC,EAAE,EAAEnB,IAAI,CAACK,KAAK,CAACc,EAAE;UACjB,GAAGvB,UAAU,CAACS;QAChB,CAAC;QACDiB,KAAK,CAAC;MACR,EAAE,OAAOD,KAAK,EAAE;QACd;MAAA;IAEJ;IAEAnC,SAAS,CAAC,YAAY;MACpB,IAAI;QACF,MAAMsC,OAAO,CAACC,GAAG,CAAC,CAChBjC,KAAK,CAAC0B,QAAQ,CAAC,gBAAgB,EAAEzB,KAAK,CAACiC,MAAM,CAACP,EAAE,CAAC,EACjD3B,KAAK,CAAC0B,QAAQ,CAAC,0BAA0B,EAC1C;MACH,EAAE,OAAOG,KAAK,EAAE;QACd;MAAA;IAEJ,CAAC;IAED,OAAO;MACLrB,IAAI;MACJE,UAAU;MACVP,MAAM;MACNC,UAAU;MACVO,gBAAgB;MAChBM,UAAU;MACVI,QAAQ;MACRG,UAAU;MACVM,KAAK;MACLC;IACF;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}