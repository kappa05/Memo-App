{"ast":null,"code":"import _regenerator from \"/Users/dai/Documents/Memo-App/src/frontend/node_modules/@babel/runtime/helpers/esm/regenerator.js\";\nimport _asyncToGenerator from \"/Users/dai/Documents/Memo-App/src/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.find-index.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.splice.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport axios from 'axios';\nvar state = {\n  categories: [],\n  loading: false,\n  error: null\n};\nvar getters = {\n  allCategories: function allCategories(state) {\n    return state.categories;\n  },\n  isLoading: function isLoading(state) {\n    return state.loading;\n  },\n  error: function error(state) {\n    return state.error;\n  }\n};\nvar actions = {\n  fetchCategories: function fetchCategories(_ref) {\n    return _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee() {\n      var commit, response, _t;\n      return _regenerator().w(function (_context) {\n        while (1) switch (_context.n) {\n          case 0:\n            commit = _ref.commit;\n            commit('SET_LOADING', true);\n            _context.p = 1;\n            _context.n = 2;\n            return axios.get('/api/categories');\n          case 2:\n            response = _context.v;\n            commit('SET_CATEGORIES', response.data);\n            _context.n = 4;\n            break;\n          case 3:\n            _context.p = 3;\n            _t = _context.v;\n            commit('SET_ERROR', _t.message);\n          case 4:\n            _context.p = 4;\n            commit('SET_LOADING', false);\n            return _context.f(4);\n          case 5:\n            return _context.a(2);\n        }\n      }, _callee, null, [[1, 3, 4, 5]]);\n    }))();\n  },\n  createCategory: function createCategory(_ref2, category) {\n    return _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee2() {\n      var commit, response, _t2;\n      return _regenerator().w(function (_context2) {\n        while (1) switch (_context2.n) {\n          case 0:\n            commit = _ref2.commit;\n            commit('SET_LOADING', true);\n            _context2.p = 1;\n            _context2.n = 2;\n            return axios.post('/api/categories', category);\n          case 2:\n            response = _context2.v;\n            commit('ADD_CATEGORY', response.data);\n            return _context2.a(2, response.data);\n          case 3:\n            _context2.p = 3;\n            _t2 = _context2.v;\n            commit('SET_ERROR', _t2.message);\n            throw _t2;\n          case 4:\n            _context2.p = 4;\n            commit('SET_LOADING', false);\n            return _context2.f(4);\n          case 5:\n            return _context2.a(2);\n        }\n      }, _callee2, null, [[1, 3, 4, 5]]);\n    }))();\n  },\n  updateCategory: function updateCategory(_ref3, _ref4) {\n    return _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee3() {\n      var commit, id, category, response, _t3;\n      return _regenerator().w(function (_context3) {\n        while (1) switch (_context3.n) {\n          case 0:\n            commit = _ref3.commit;\n            id = _ref4.id, category = _ref4.category;\n            commit('SET_LOADING', true);\n            _context3.p = 1;\n            _context3.n = 2;\n            return axios.put(\"/api/categories/\".concat(id), category);\n          case 2:\n            response = _context3.v;\n            commit('UPDATE_CATEGORY', response.data);\n            return _context3.a(2, response.data);\n          case 3:\n            _context3.p = 3;\n            _t3 = _context3.v;\n            commit('SET_ERROR', _t3.message);\n            throw _t3;\n          case 4:\n            _context3.p = 4;\n            commit('SET_LOADING', false);\n            return _context3.f(4);\n          case 5:\n            return _context3.a(2);\n        }\n      }, _callee3, null, [[1, 3, 4, 5]]);\n    }))();\n  },\n  deleteCategory: function deleteCategory(_ref5, id) {\n    return _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee4() {\n      var commit, _t4;\n      return _regenerator().w(function (_context4) {\n        while (1) switch (_context4.n) {\n          case 0:\n            commit = _ref5.commit;\n            commit('SET_LOADING', true);\n            _context4.p = 1;\n            _context4.n = 2;\n            return axios[\"delete\"](\"/api/categories/\".concat(id));\n          case 2:\n            commit('DELETE_CATEGORY', id);\n            _context4.n = 4;\n            break;\n          case 3:\n            _context4.p = 3;\n            _t4 = _context4.v;\n            commit('SET_ERROR', _t4.message);\n            throw _t4;\n          case 4:\n            _context4.p = 4;\n            commit('SET_LOADING', false);\n            return _context4.f(4);\n          case 5:\n            return _context4.a(2);\n        }\n      }, _callee4, null, [[1, 3, 4, 5]]);\n    }))();\n  }\n};\nvar mutations = {\n  SET_CATEGORIES: function SET_CATEGORIES(state, categories) {\n    state.categories = categories;\n  },\n  ADD_CATEGORY: function ADD_CATEGORY(state, category) {\n    state.categories.push(category);\n  },\n  UPDATE_CATEGORY: function UPDATE_CATEGORY(state, updatedCategory) {\n    var index = state.categories.findIndex(function (c) {\n      return c.id === updatedCategory.id;\n    });\n    if (index !== -1) {\n      state.categories.splice(index, 1, updatedCategory);\n    }\n  },\n  DELETE_CATEGORY: function DELETE_CATEGORY(state, id) {\n    state.categories = state.categories.filter(function (c) {\n      return c.id !== id;\n    });\n  },\n  SET_LOADING: function SET_LOADING(state, loading) {\n    state.loading = loading;\n  },\n  SET_ERROR: function SET_ERROR(state, error) {\n    state.error = error;\n  }\n};\nexport default {\n  namespaced: true,\n  state: state,\n  getters: getters,\n  actions: actions,\n  mutations: mutations\n};","map":{"version":3,"names":["axios","state","categories","loading","error","getters","allCategories","isLoading","actions","fetchCategories","_ref","_asyncToGenerator","_regenerator","m","_callee","commit","response","_t","w","_context","n","p","get","v","data","message","f","a","createCategory","_ref2","category","_callee2","_t2","_context2","post","updateCategory","_ref3","_ref4","_callee3","id","_t3","_context3","put","concat","deleteCategory","_ref5","_callee4","_t4","_context4","mutations","SET_CATEGORIES","ADD_CATEGORY","push","UPDATE_CATEGORY","updatedCategory","index","findIndex","c","splice","DELETE_CATEGORY","filter","SET_LOADING","SET_ERROR","namespaced"],"sources":["/Users/dai/Documents/Memo-App/src/frontend/src/store/modules/category.js"],"sourcesContent":["import axios from 'axios'\n\nconst state = {\n  categories: [],\n  loading: false,\n  error: null\n}\n\nconst getters = {\n  allCategories: state => state.categories,\n  isLoading: state => state.loading,\n  error: state => state.error\n}\n\nconst actions = {\n  async fetchCategories({ commit }) {\n    commit('SET_LOADING', true)\n    try {\n      const response = await axios.get('/api/categories')\n      commit('SET_CATEGORIES', response.data)\n    } catch (error) {\n      commit('SET_ERROR', error.message)\n    } finally {\n      commit('SET_LOADING', false)\n    }\n  },\n\n  async createCategory({ commit }, category) {\n    commit('SET_LOADING', true)\n    try {\n      const response = await axios.post('/api/categories', category)\n      commit('ADD_CATEGORY', response.data)\n      return response.data\n    } catch (error) {\n      commit('SET_ERROR', error.message)\n      throw error\n    } finally {\n      commit('SET_LOADING', false)\n    }\n  },\n\n  async updateCategory({ commit }, { id, category }) {\n    commit('SET_LOADING', true)\n    try {\n      const response = await axios.put(`/api/categories/${id}`, category)\n      commit('UPDATE_CATEGORY', response.data)\n      return response.data\n    } catch (error) {\n      commit('SET_ERROR', error.message)\n      throw error\n    } finally {\n      commit('SET_LOADING', false)\n    }\n  },\n\n  async deleteCategory({ commit }, id) {\n    commit('SET_LOADING', true)\n    try {\n      await axios.delete(`/api/categories/${id}`)\n      commit('DELETE_CATEGORY', id)\n    } catch (error) {\n      commit('SET_ERROR', error.message)\n      throw error\n    } finally {\n      commit('SET_LOADING', false)\n    }\n  }\n}\n\nconst mutations = {\n  SET_CATEGORIES(state, categories) {\n    state.categories = categories\n  },\n  ADD_CATEGORY(state, category) {\n    state.categories.push(category)\n  },\n  UPDATE_CATEGORY(state, updatedCategory) {\n    const index = state.categories.findIndex(c => c.id === updatedCategory.id)\n    if (index !== -1) {\n      state.categories.splice(index, 1, updatedCategory)\n    }\n  },\n  DELETE_CATEGORY(state, id) {\n    state.categories = state.categories.filter(c => c.id !== id)\n  },\n  SET_LOADING(state, loading) {\n    state.loading = loading\n  },\n  SET_ERROR(state, error) {\n    state.error = error\n  }\n}\n\nexport default {\n  namespaced: true,\n  state,\n  getters,\n  actions,\n  mutations\n} "],"mappings":";;;;;;;;;AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,IAAMC,KAAK,GAAG;EACZC,UAAU,EAAE,EAAE;EACdC,OAAO,EAAE,KAAK;EACdC,KAAK,EAAE;AACT,CAAC;AAED,IAAMC,OAAO,GAAG;EACdC,aAAa,EAAE,SAAfA,aAAaA,CAAEL,KAAK;IAAA,OAAIA,KAAK,CAACC,UAAU;EAAA;EACxCK,SAAS,EAAE,SAAXA,SAASA,CAAEN,KAAK;IAAA,OAAIA,KAAK,CAACE,OAAO;EAAA;EACjCC,KAAK,EAAE,SAAPA,KAAKA,CAAEH,KAAK;IAAA,OAAIA,KAAK,CAACG,KAAK;EAAA;AAC7B,CAAC;AAED,IAAMI,OAAO,GAAG;EACRC,eAAe,WAAfA,eAAeA,CAAAC,IAAA,EAAa;IAAA,OAAAC,iBAAA,cAAAC,YAAA,GAAAC,CAAA,UAAAC,QAAA;MAAA,IAAAC,MAAA,EAAAC,QAAA,EAAAC,EAAA;MAAA,OAAAL,YAAA,GAAAM,CAAA,WAAAC,QAAA;QAAA,kBAAAA,QAAA,CAAAC,CAAA;UAAA;YAAVL,MAAM,GAAAL,IAAA,CAANK,MAAM;YAC5BA,MAAM,CAAC,aAAa,EAAE,IAAI,CAAC;YAAAI,QAAA,CAAAE,CAAA;YAAAF,QAAA,CAAAC,CAAA;YAAA,OAEFpB,KAAK,CAACsB,GAAG,CAAC,iBAAiB,CAAC;UAAA;YAA7CN,QAAQ,GAAAG,QAAA,CAAAI,CAAA;YACdR,MAAM,CAAC,gBAAgB,EAAEC,QAAQ,CAACQ,IAAI,CAAC;YAAAL,QAAA,CAAAC,CAAA;YAAA;UAAA;YAAAD,QAAA,CAAAE,CAAA;YAAAJ,EAAA,GAAAE,QAAA,CAAAI,CAAA;YAEvCR,MAAM,CAAC,WAAW,EAAEE,EAAA,CAAMQ,OAAO,CAAC;UAAA;YAAAN,QAAA,CAAAE,CAAA;YAElCN,MAAM,CAAC,aAAa,EAAE,KAAK,CAAC;YAAA,OAAAI,QAAA,CAAAO,CAAA;UAAA;YAAA,OAAAP,QAAA,CAAAQ,CAAA;QAAA;MAAA,GAAAb,OAAA;IAAA;EAEhC,CAAC;EAEKc,cAAc,WAAdA,cAAcA,CAAAC,KAAA,EAAaC,QAAQ,EAAE;IAAA,OAAAnB,iBAAA,cAAAC,YAAA,GAAAC,CAAA,UAAAkB,SAAA;MAAA,IAAAhB,MAAA,EAAAC,QAAA,EAAAgB,GAAA;MAAA,OAAApB,YAAA,GAAAM,CAAA,WAAAe,SAAA;QAAA,kBAAAA,SAAA,CAAAb,CAAA;UAAA;YAApBL,MAAM,GAAAc,KAAA,CAANd,MAAM;YAC3BA,MAAM,CAAC,aAAa,EAAE,IAAI,CAAC;YAAAkB,SAAA,CAAAZ,CAAA;YAAAY,SAAA,CAAAb,CAAA;YAAA,OAEFpB,KAAK,CAACkC,IAAI,CAAC,iBAAiB,EAAEJ,QAAQ,CAAC;UAAA;YAAxDd,QAAQ,GAAAiB,SAAA,CAAAV,CAAA;YACdR,MAAM,CAAC,cAAc,EAAEC,QAAQ,CAACQ,IAAI,CAAC;YAAA,OAAAS,SAAA,CAAAN,CAAA,IAC9BX,QAAQ,CAACQ,IAAI;UAAA;YAAAS,SAAA,CAAAZ,CAAA;YAAAW,GAAA,GAAAC,SAAA,CAAAV,CAAA;YAEpBR,MAAM,CAAC,WAAW,EAAEiB,GAAA,CAAMP,OAAO,CAAC;YAAA,MAAAO,GAAA;UAAA;YAAAC,SAAA,CAAAZ,CAAA;YAGlCN,MAAM,CAAC,aAAa,EAAE,KAAK,CAAC;YAAA,OAAAkB,SAAA,CAAAP,CAAA;UAAA;YAAA,OAAAO,SAAA,CAAAN,CAAA;QAAA;MAAA,GAAAI,QAAA;IAAA;EAEhC,CAAC;EAEKI,cAAc,WAAdA,cAAcA,CAAAC,KAAA,EAAAC,KAAA,EAA+B;IAAA,OAAA1B,iBAAA,cAAAC,YAAA,GAAAC,CAAA,UAAAyB,SAAA;MAAA,IAAAvB,MAAA,EAAAwB,EAAA,EAAAT,QAAA,EAAAd,QAAA,EAAAwB,GAAA;MAAA,OAAA5B,YAAA,GAAAM,CAAA,WAAAuB,SAAA;QAAA,kBAAAA,SAAA,CAAArB,CAAA;UAAA;YAA5BL,MAAM,GAAAqB,KAAA,CAANrB,MAAM;YAAMwB,EAAE,GAAAF,KAAA,CAAFE,EAAE,EAAET,QAAQ,GAAAO,KAAA,CAARP,QAAQ;YAC7Cf,MAAM,CAAC,aAAa,EAAE,IAAI,CAAC;YAAA0B,SAAA,CAAApB,CAAA;YAAAoB,SAAA,CAAArB,CAAA;YAAA,OAEFpB,KAAK,CAAC0C,GAAG,oBAAAC,MAAA,CAAoBJ,EAAE,GAAIT,QAAQ,CAAC;UAAA;YAA7Dd,QAAQ,GAAAyB,SAAA,CAAAlB,CAAA;YACdR,MAAM,CAAC,iBAAiB,EAAEC,QAAQ,CAACQ,IAAI,CAAC;YAAA,OAAAiB,SAAA,CAAAd,CAAA,IACjCX,QAAQ,CAACQ,IAAI;UAAA;YAAAiB,SAAA,CAAApB,CAAA;YAAAmB,GAAA,GAAAC,SAAA,CAAAlB,CAAA;YAEpBR,MAAM,CAAC,WAAW,EAAEyB,GAAA,CAAMf,OAAO,CAAC;YAAA,MAAAe,GAAA;UAAA;YAAAC,SAAA,CAAApB,CAAA;YAGlCN,MAAM,CAAC,aAAa,EAAE,KAAK,CAAC;YAAA,OAAA0B,SAAA,CAAAf,CAAA;UAAA;YAAA,OAAAe,SAAA,CAAAd,CAAA;QAAA;MAAA,GAAAW,QAAA;IAAA;EAEhC,CAAC;EAEKM,cAAc,WAAdA,cAAcA,CAAAC,KAAA,EAAaN,EAAE,EAAE;IAAA,OAAA5B,iBAAA,cAAAC,YAAA,GAAAC,CAAA,UAAAiC,SAAA;MAAA,IAAA/B,MAAA,EAAAgC,GAAA;MAAA,OAAAnC,YAAA,GAAAM,CAAA,WAAA8B,SAAA;QAAA,kBAAAA,SAAA,CAAA5B,CAAA;UAAA;YAAdL,MAAM,GAAA8B,KAAA,CAAN9B,MAAM;YAC3BA,MAAM,CAAC,aAAa,EAAE,IAAI,CAAC;YAAAiC,SAAA,CAAA3B,CAAA;YAAA2B,SAAA,CAAA5B,CAAA;YAAA,OAEnBpB,KAAK,UAAO,oBAAA2C,MAAA,CAAoBJ,EAAE,CAAE,CAAC;UAAA;YAC3CxB,MAAM,CAAC,iBAAiB,EAAEwB,EAAE,CAAC;YAAAS,SAAA,CAAA5B,CAAA;YAAA;UAAA;YAAA4B,SAAA,CAAA3B,CAAA;YAAA0B,GAAA,GAAAC,SAAA,CAAAzB,CAAA;YAE7BR,MAAM,CAAC,WAAW,EAAEgC,GAAA,CAAMtB,OAAO,CAAC;YAAA,MAAAsB,GAAA;UAAA;YAAAC,SAAA,CAAA3B,CAAA;YAGlCN,MAAM,CAAC,aAAa,EAAE,KAAK,CAAC;YAAA,OAAAiC,SAAA,CAAAtB,CAAA;UAAA;YAAA,OAAAsB,SAAA,CAAArB,CAAA;QAAA;MAAA,GAAAmB,QAAA;IAAA;EAEhC;AACF,CAAC;AAED,IAAMG,SAAS,GAAG;EAChBC,cAAc,WAAdA,cAAcA,CAACjD,KAAK,EAAEC,UAAU,EAAE;IAChCD,KAAK,CAACC,UAAU,GAAGA,UAAU;EAC/B,CAAC;EACDiD,YAAY,WAAZA,YAAYA,CAAClD,KAAK,EAAE6B,QAAQ,EAAE;IAC5B7B,KAAK,CAACC,UAAU,CAACkD,IAAI,CAACtB,QAAQ,CAAC;EACjC,CAAC;EACDuB,eAAe,WAAfA,eAAeA,CAACpD,KAAK,EAAEqD,eAAe,EAAE;IACtC,IAAMC,KAAK,GAAGtD,KAAK,CAACC,UAAU,CAACsD,SAAS,CAAC,UAAAC,CAAC;MAAA,OAAIA,CAAC,CAAClB,EAAE,KAAKe,eAAe,CAACf,EAAE;IAAA,EAAC;IAC1E,IAAIgB,KAAK,KAAK,CAAC,CAAC,EAAE;MAChBtD,KAAK,CAACC,UAAU,CAACwD,MAAM,CAACH,KAAK,EAAE,CAAC,EAAED,eAAe,CAAC;IACpD;EACF,CAAC;EACDK,eAAe,WAAfA,eAAeA,CAAC1D,KAAK,EAAEsC,EAAE,EAAE;IACzBtC,KAAK,CAACC,UAAU,GAAGD,KAAK,CAACC,UAAU,CAAC0D,MAAM,CAAC,UAAAH,CAAC;MAAA,OAAIA,CAAC,CAAClB,EAAE,KAAKA,EAAE;IAAA,EAAC;EAC9D,CAAC;EACDsB,WAAW,WAAXA,WAAWA,CAAC5D,KAAK,EAAEE,OAAO,EAAE;IAC1BF,KAAK,CAACE,OAAO,GAAGA,OAAO;EACzB,CAAC;EACD2D,SAAS,WAATA,SAASA,CAAC7D,KAAK,EAAEG,KAAK,EAAE;IACtBH,KAAK,CAACG,KAAK,GAAGA,KAAK;EACrB;AACF,CAAC;AAED,eAAe;EACb2D,UAAU,EAAE,IAAI;EAChB9D,KAAK,EAALA,KAAK;EACLI,OAAO,EAAPA,OAAO;EACPG,OAAO,EAAPA,OAAO;EACPyC,SAAS,EAATA;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}