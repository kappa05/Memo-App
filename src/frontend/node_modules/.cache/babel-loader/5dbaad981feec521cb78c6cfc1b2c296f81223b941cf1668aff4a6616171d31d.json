{"ast":null,"code":"import _regenerator from \"/Users/dai/Documents/Memo-App/src/frontend/node_modules/@babel/runtime/helpers/esm/regenerator.js\";\nimport _objectSpread from \"/Users/dai/Documents/Memo-App/src/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _asyncToGenerator from \"/Users/dai/Documents/Memo-App/src/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport { ref, computed, onMounted } from 'vue';\nimport { useStore } from 'vuex';\nimport { useRoute, useRouter } from 'vue-router';\nexport default {\n  name: 'MemoEdit',\n  setup: function setup() {\n    var store = useStore();\n    var route = useRoute();\n    var router = useRouter();\n    var memo = ref({\n      title: '',\n      content: '',\n      category: ''\n    });\n    var rules = {\n      required: function required(value) {\n        return !!value || '必須項目です';\n      }\n    };\n    var isNew = computed(function () {\n      return !route.params.id;\n    });\n    var categories = computed(function () {\n      return store.getters['category/allCategories'];\n    });\n    var save = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee() {\n        var _t;\n        return _regenerator().w(function (_context) {\n          while (1) switch (_context.n) {\n            case 0:\n              _context.p = 0;\n              if (!isNew.value) {\n                _context.n = 2;\n                break;\n              }\n              _context.n = 1;\n              return store.dispatch('memo/createMemo', memo.value);\n            case 1:\n              _context.n = 3;\n              break;\n            case 2:\n              _context.n = 3;\n              return store.dispatch('memo/updateMemo', _objectSpread({\n                id: route.params.id\n              }, memo.value));\n            case 3:\n              router.push('/memos');\n              _context.n = 5;\n              break;\n            case 4:\n              _context.p = 4;\n              _t = _context.v;\n            case 5:\n              return _context.a(2);\n          }\n        }, _callee, null, [[0, 4]]);\n      }));\n      return function save() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n    onMounted(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regenerator().m(function _callee2() {\n      var currentMemo, _t2;\n      return _regenerator().w(function (_context2) {\n        while (1) switch (_context2.n) {\n          case 0:\n            _context2.p = 0;\n            _context2.n = 1;\n            return Promise.all([store.dispatch('category/fetchCategories'), !isNew.value && store.dispatch('memo/fetchMemo', route.params.id)]);\n          case 1:\n            if (!isNew.value) {\n              currentMemo = store.getters['memo/currentMemo'];\n              if (currentMemo) {\n                memo.value = _objectSpread({}, currentMemo);\n              }\n            }\n            _context2.n = 3;\n            break;\n          case 2:\n            _context2.p = 2;\n            _t2 = _context2.v;\n          case 3:\n            return _context2.a(2);\n        }\n      }, _callee2, null, [[0, 2]]);\n    })));\n    return {\n      memo: memo,\n      rules: rules,\n      isNew: isNew,\n      categories: categories,\n      save: save\n    };\n  }\n};","map":{"version":3,"names":["ref","computed","onMounted","useStore","useRoute","useRouter","name","setup","store","route","router","memo","title","content","category","rules","required","value","isNew","params","id","categories","getters","save","_ref","_asyncToGenerator","_regenerator","m","_callee","_t","w","_context","n","p","dispatch","_objectSpread","push","v","a","apply","arguments","_callee2","currentMemo","_t2","_context2","Promise","all"],"sources":["/Users/dai/Documents/Memo-App/src/frontend/src/views/MemoEdit.vue"],"sourcesContent":["<template>\n  <v-container>\n    <v-row>\n      <v-col cols=\"12\">\n        <v-card>\n          <v-card-title>\n            <span class=\"text-h5\">{{ isNew ? '新規メモ' : 'メモ編集' }}</span>\n          </v-card-title>\n\n          <v-card-text>\n            <v-container>\n              <v-row>\n                <v-col cols=\"12\">\n                  <v-text-field\n                    v-model=\"memo.title\"\n                    label=\"タイトル\"\n                    :rules=\"[rules.required]\"\n                  ></v-text-field>\n                </v-col>\n                <v-col cols=\"12\">\n                  <v-textarea\n                    v-model=\"memo.content\"\n                    label=\"内容\"\n                    :rules=\"[rules.required]\"\n                  ></v-textarea>\n                </v-col>\n                <v-col cols=\"12\">\n                  <v-select\n                    v-model=\"memo.category\"\n                    :items=\"categories\"\n                    label=\"カテゴリー\"\n                    :rules=\"[rules.required]\"\n                  ></v-select>\n                </v-col>\n              </v-row>\n            </v-container>\n          </v-card-text>\n\n          <v-card-actions>\n            <v-spacer></v-spacer>\n            <v-btn\n              color=\"blue darken-1\"\n              text\n              @click=\"$router.push('/memos')\"\n            >\n              キャンセル\n            </v-btn>\n            <v-btn\n              color=\"blue darken-1\"\n              text\n              @click=\"save\"\n            >\n              保存\n            </v-btn>\n          </v-card-actions>\n        </v-card>\n      </v-col>\n    </v-row>\n  </v-container>\n</template>\n\n<script>\nimport { ref, computed, onMounted } from 'vue'\nimport { useStore } from 'vuex'\nimport { useRoute, useRouter } from 'vue-router'\n\nexport default {\n  name: 'MemoEdit',\n  setup() {\n    const store = useStore()\n    const route = useRoute()\n    const router = useRouter()\n\n    const memo = ref({\n      title: '',\n      content: '',\n      category: ''\n    })\n\n    const rules = {\n      required: value => !!value || '必須項目です'\n    }\n\n    const isNew = computed(() => !route.params.id)\n    const categories = computed(() => store.getters['category/allCategories'])\n\n    const save = async () => {\n      try {\n        if (isNew.value) {\n          await store.dispatch('memo/createMemo', memo.value)\n        } else {\n          await store.dispatch('memo/updateMemo', {\n            id: route.params.id,\n            ...memo.value\n          })\n        }\n        router.push('/memos')\n      } catch (error) {\n        // エラー処理はグローバルエラーハンドラーで行う\n      }\n    }\n\n    onMounted(async () => {\n      try {\n        await Promise.all([\n          store.dispatch('category/fetchCategories'),\n          !isNew.value && store.dispatch('memo/fetchMemo', route.params.id)\n        ])\n\n        if (!isNew.value) {\n          const currentMemo = store.getters['memo/currentMemo']\n          if (currentMemo) {\n            memo.value = { ...currentMemo }\n          }\n        }\n      } catch (error) {\n        // エラー処理はグローバルエラーハンドラーで行う\n      }\n    })\n\n    return {\n      memo,\n      rules,\n      isNew,\n      categories,\n      save\n    }\n  }\n}\n</script> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}