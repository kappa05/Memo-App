{"ast":null,"code":"import { ref, computed, onMounted } from 'vue';\nimport { useStore } from 'vuex';\nexport default {\n  name: 'CategoryList',\n  setup() {\n    const store = useStore();\n    const dialog = ref(false);\n    const editedIndex = ref(-1);\n    const editedItem = ref({\n      name: '',\n      color: '#000000'\n    });\n    const defaultItem = {\n      name: '',\n      color: '#000000'\n    };\n    const headers = [{\n      text: 'カテゴリー名',\n      value: 'name'\n    }, {\n      text: '色',\n      value: 'color'\n    }, {\n      text: '操作',\n      value: 'actions',\n      sortable: false\n    }];\n    const loading = computed(() => store.getters['category/isLoading']);\n    const categories = computed(() => store.getters['category/allCategories']);\n    const formTitle = computed(() => {\n      return editedIndex.value === -1 ? '新規カテゴリー' : 'カテゴリー編集';\n    });\n    const createCategory = () => {\n      editedIndex.value = -1;\n      editedItem.value = Object.assign({}, defaultItem);\n      dialog.value = true;\n    };\n    const editCategory = item => {\n      editedIndex.value = categories.value.indexOf(item);\n      editedItem.value = Object.assign({}, item);\n      dialog.value = true;\n    };\n    const deleteCategory = async item => {\n      if (confirm('このカテゴリーを削除してもよろしいですか？')) {\n        try {\n          await store.dispatch('category/deleteCategory', item.id);\n        } catch (error) {\n          // エラー処理はグローバルエラーハンドラーで行う\n        }\n      }\n    };\n    const close = () => {\n      dialog.value = false;\n      editedItem.value = Object.assign({}, defaultItem);\n      editedIndex.value = -1;\n    };\n    const save = async () => {\n      try {\n        if (editedIndex.value > -1) {\n          await store.dispatch('category/updateCategory', {\n            id: editedItem.value.id,\n            ...editedItem.value\n          });\n        } else {\n          await store.dispatch('category/createCategory', editedItem.value);\n        }\n        close();\n      } catch (error) {\n        // エラー処理はグローバルエラーハンドラーで行う\n      }\n    };\n    onMounted(async () => {\n      try {\n        await store.dispatch('category/fetchCategories');\n      } catch (error) {\n        // エラー処理はグローバルエラーハンドラーで行う\n      }\n    });\n    return {\n      dialog,\n      editedIndex,\n      editedItem,\n      headers,\n      loading,\n      categories,\n      formTitle,\n      createCategory,\n      editCategory,\n      deleteCategory,\n      close,\n      save\n    };\n  }\n};","map":{"version":3,"names":["ref","computed","onMounted","useStore","name","setup","store","dialog","editedIndex","editedItem","color","defaultItem","headers","text","value","sortable","loading","getters","categories","formTitle","createCategory","Object","assign","editCategory","item","indexOf","deleteCategory","confirm","dispatch","id","error","close","save"],"sources":["/Users/dai/Documents/Memo-App/src/frontend/src/views/CategoryList.vue"],"sourcesContent":["<template>\n  <v-container>\n    <v-row>\n      <v-col cols=\"12\">\n        <v-card>\n          <v-card-title>\n            カテゴリー管理\n            <v-spacer></v-spacer>\n            <v-btn\n              color=\"primary\"\n              dark\n              class=\"mb-2\"\n              @click=\"createCategory\"\n            >\n              新規カテゴリー作成\n            </v-btn>\n          </v-card-title>\n\n          <v-data-table\n            :headers=\"headers\"\n            :items=\"categories\"\n            :loading=\"loading\"\n            class=\"elevation-1\"\n          >\n            <template v-slot:[`item.color`]=\"{ item }\">\n              <v-chip\n                :color=\"item.color\"\n                text-color=\"white\"\n              >\n                {{ item.color }}\n              </v-chip>\n            </template>\n\n            <template v-slot:[`item.actions`]=\"{ item }\">\n              <v-icon\n                small\n                class=\"mr-2\"\n                @click=\"editCategory(item)\"\n              >\n                mdi-pencil\n              </v-icon>\n              <v-icon\n                small\n                @click=\"deleteCategory(item)\"\n              >\n                mdi-delete\n              </v-icon>\n            </template>\n          </v-data-table>\n        </v-card>\n      </v-col>\n    </v-row>\n\n    <v-dialog v-model=\"dialog\" max-width=\"500px\">\n      <v-card>\n        <v-card-title>\n          <span class=\"text-h5\">{{ formTitle }}</span>\n        </v-card-title>\n\n        <v-card-text>\n          <v-container>\n            <v-row>\n              <v-col cols=\"12\">\n                <v-text-field\n                  v-model=\"editedItem.name\"\n                  label=\"カテゴリー名\"\n                ></v-text-field>\n              </v-col>\n              <v-col cols=\"12\">\n                <v-color-picker\n                  v-model=\"editedItem.color\"\n                  mode=\"hex\"\n                  hide-inputs\n                  class=\"mx-auto\"\n                ></v-color-picker>\n              </v-col>\n            </v-row>\n          </v-container>\n        </v-card-text>\n\n        <v-card-actions>\n          <v-spacer></v-spacer>\n          <v-btn color=\"blue darken-1\" text @click=\"close\">キャンセル</v-btn>\n          <v-btn color=\"blue darken-1\" text @click=\"save\">保存</v-btn>\n        </v-card-actions>\n      </v-card>\n    </v-dialog>\n  </v-container>\n</template>\n\n<script>\nimport { ref, computed, onMounted } from 'vue'\nimport { useStore } from 'vuex'\n\nexport default {\n  name: 'CategoryList',\n  setup() {\n    const store = useStore()\n\n    const dialog = ref(false)\n    const editedIndex = ref(-1)\n    const editedItem = ref({\n      name: '',\n      color: '#000000'\n    })\n    const defaultItem = {\n      name: '',\n      color: '#000000'\n    }\n\n    const headers = [\n      { text: 'カテゴリー名', value: 'name' },\n      { text: '色', value: 'color' },\n      { text: '操作', value: 'actions', sortable: false }\n    ]\n\n    const loading = computed(() => store.getters['category/isLoading'])\n    const categories = computed(() => store.getters['category/allCategories'])\n\n    const formTitle = computed(() => {\n      return editedIndex.value === -1 ? '新規カテゴリー' : 'カテゴリー編集'\n    })\n\n    const createCategory = () => {\n      editedIndex.value = -1\n      editedItem.value = Object.assign({}, defaultItem)\n      dialog.value = true\n    }\n\n    const editCategory = (item) => {\n      editedIndex.value = categories.value.indexOf(item)\n      editedItem.value = Object.assign({}, item)\n      dialog.value = true\n    }\n\n    const deleteCategory = async (item) => {\n      if (confirm('このカテゴリーを削除してもよろしいですか？')) {\n        try {\n          await store.dispatch('category/deleteCategory', item.id)\n        } catch (error) {\n          // エラー処理はグローバルエラーハンドラーで行う\n        }\n      }\n    }\n\n    const close = () => {\n      dialog.value = false\n      editedItem.value = Object.assign({}, defaultItem)\n      editedIndex.value = -1\n    }\n\n    const save = async () => {\n      try {\n        if (editedIndex.value > -1) {\n          await store.dispatch('category/updateCategory', {\n            id: editedItem.value.id,\n            ...editedItem.value\n          })\n        } else {\n          await store.dispatch('category/createCategory', editedItem.value)\n        }\n        close()\n      } catch (error) {\n        // エラー処理はグローバルエラーハンドラーで行う\n      }\n    }\n\n    onMounted(async () => {\n      try {\n        await store.dispatch('category/fetchCategories')\n      } catch (error) {\n        // エラー処理はグローバルエラーハンドラーで行う\n      }\n    })\n\n    return {\n      dialog,\n      editedIndex,\n      editedItem,\n      headers,\n      loading,\n      categories,\n      formTitle,\n      createCategory,\n      editCategory,\n      deleteCategory,\n      close,\n      save\n    }\n  }\n}\n</script> "],"mappings":"AA2FA,SAASA,GAAG,EAAEC,QAAQ,EAAEC,SAAQ,QAAS,KAAI;AAC7C,SAASC,QAAO,QAAS,MAAK;AAE9B,eAAe;EACbC,IAAI,EAAE,cAAc;EACpBC,KAAKA,CAAA,EAAG;IACN,MAAMC,KAAI,GAAIH,QAAQ,CAAC;IAEvB,MAAMI,MAAK,GAAIP,GAAG,CAAC,KAAK;IACxB,MAAMQ,WAAU,GAAIR,GAAG,CAAC,CAAC,CAAC;IAC1B,MAAMS,UAAS,GAAIT,GAAG,CAAC;MACrBI,IAAI,EAAE,EAAE;MACRM,KAAK,EAAE;IACT,CAAC;IACD,MAAMC,WAAU,GAAI;MAClBP,IAAI,EAAE,EAAE;MACRM,KAAK,EAAE;IACT;IAEA,MAAME,OAAM,GAAI,CACd;MAAEC,IAAI,EAAE,QAAQ;MAAEC,KAAK,EAAE;IAAO,CAAC,EACjC;MAAED,IAAI,EAAE,GAAG;MAAEC,KAAK,EAAE;IAAQ,CAAC,EAC7B;MAAED,IAAI,EAAE,IAAI;MAAEC,KAAK,EAAE,SAAS;MAAEC,QAAQ,EAAE;IAAM,EAClD;IAEA,MAAMC,OAAM,GAAIf,QAAQ,CAAC,MAAMK,KAAK,CAACW,OAAO,CAAC,oBAAoB,CAAC;IAClE,MAAMC,UAAS,GAAIjB,QAAQ,CAAC,MAAMK,KAAK,CAACW,OAAO,CAAC,wBAAwB,CAAC;IAEzE,MAAME,SAAQ,GAAIlB,QAAQ,CAAC,MAAM;MAC/B,OAAOO,WAAW,CAACM,KAAI,KAAM,CAAC,IAAI,SAAQ,GAAI,SAAQ;IACxD,CAAC;IAED,MAAMM,cAAa,GAAIA,CAAA,KAAM;MAC3BZ,WAAW,CAACM,KAAI,GAAI,CAAC;MACrBL,UAAU,CAACK,KAAI,GAAIO,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAEX,WAAW;MAChDJ,MAAM,CAACO,KAAI,GAAI,IAAG;IACpB;IAEA,MAAMS,YAAW,GAAKC,IAAI,IAAK;MAC7BhB,WAAW,CAACM,KAAI,GAAII,UAAU,CAACJ,KAAK,CAACW,OAAO,CAACD,IAAI;MACjDf,UAAU,CAACK,KAAI,GAAIO,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAEE,IAAI;MACzCjB,MAAM,CAACO,KAAI,GAAI,IAAG;IACpB;IAEA,MAAMY,cAAa,GAAI,MAAOF,IAAI,IAAK;MACrC,IAAIG,OAAO,CAAC,uBAAuB,CAAC,EAAE;QACpC,IAAI;UACF,MAAMrB,KAAK,CAACsB,QAAQ,CAAC,yBAAyB,EAAEJ,IAAI,CAACK,EAAE;QACzD,EAAE,OAAOC,KAAK,EAAE;UACd;QAAA;MAEJ;IACF;IAEA,MAAMC,KAAI,GAAIA,CAAA,KAAM;MAClBxB,MAAM,CAACO,KAAI,GAAI,KAAI;MACnBL,UAAU,CAACK,KAAI,GAAIO,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAEX,WAAW;MAChDH,WAAW,CAACM,KAAI,GAAI,CAAC;IACvB;IAEA,MAAMkB,IAAG,GAAI,MAAAA,CAAA,KAAY;MACvB,IAAI;QACF,IAAIxB,WAAW,CAACM,KAAI,GAAI,CAAC,CAAC,EAAE;UAC1B,MAAMR,KAAK,CAACsB,QAAQ,CAAC,yBAAyB,EAAE;YAC9CC,EAAE,EAAEpB,UAAU,CAACK,KAAK,CAACe,EAAE;YACvB,GAAGpB,UAAU,CAACK;UAChB,CAAC;QACH,OAAO;UACL,MAAMR,KAAK,CAACsB,QAAQ,CAAC,yBAAyB,EAAEnB,UAAU,CAACK,KAAK;QAClE;QACAiB,KAAK,CAAC;MACR,EAAE,OAAOD,KAAK,EAAE;QACd;MAAA;IAEJ;IAEA5B,SAAS,CAAC,YAAY;MACpB,IAAI;QACF,MAAMI,KAAK,CAACsB,QAAQ,CAAC,0BAA0B;MACjD,EAAE,OAAOE,KAAK,EAAE;QACd;MAAA;IAEJ,CAAC;IAED,OAAO;MACLvB,MAAM;MACNC,WAAW;MACXC,UAAU;MACVG,OAAO;MACPI,OAAO;MACPE,UAAU;MACVC,SAAS;MACTC,cAAc;MACdG,YAAY;MACZG,cAAc;MACdK,KAAK;MACLC;IACF;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}